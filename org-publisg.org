

#+BEGIN_SRC emacs-lisp :results silent
(require 'ox-ipynb)
(ox-ipynb-export-org-file-to-ipynb-file "Lecc01.org")
(ox-ipynb-export-org-file-to-ipynb-file "Lecc02.org")
(ox-ipynb-export-org-file-to-ipynb-file "Lecc03.org")
(ox-ipynb-export-org-file-to-ipynb-file "Lecc04.org")
(ox-ipynb-export-org-file-to-ipynb-file "Lecc05.org")
#+END_SRC

#+BEGIN_SRC sh :results silent
jupyter nbconvert --config mycfg-GitHubPages.py --to slides --reveal-prefix reveal.js --no-input
#+END_SRC

#+BEGIN_SRC sh :results none
jupyter nbconvert --config mycfg.py --to slides 
#+END_SRC

** USB-publish
#+BEGIN_SRC emacs-lisp  :tangle ~/publish.el :results silent
(use-package htmlize)

(require 'ox-publish)

(let* ((base-directory "./")
       (org-export-with-broken-links t)
       (org-publish-project-alist `(("html"
				     :base-directory ,base-directory
				     :base-extension "org"
				     :publishing-directory ,(concat base-directory "USB")
				     :exclude "Almacen\\|USB\\|docs\\|Calendario\\|ucarima.*\\|.ipynb_checkpoints\\|00Notas.*\\|org-publisg.*\\|*.txt\\|kk.*"
				     :recursive t
				     :publishing-function org-html-publish-to-html
				     :auto-preamble t
				     :auto-sitemap nil)
				    
				    ("static-html"
				     :base-directory ,base-directory
				     :base-extension "css\\|js\\|png\\|jpg\\|gif\\|pdf\\|dat\\|mov\\|svg\\|aiff\\|csv\\|gdt\\|inp\\|ipynb\\|html"
				     :publishing-directory ,(concat base-directory "USB")
				     :exclude "Almacen\\|USB\\|docs\\|ucarima.*\\|.ipynb_checkpoints\\|org-publisg.*\\|*.txt\\|kk.*"
				     :recursive t
				     :publishing-function org-publish-attachment)

				    ;; ... all the components ...
				    ("scimax-eln" :components ("html" "static-html")))))

  (org-publish "scimax-eln" t))
#+END_SRC


** Org-publish                                                     :noexport:

We need a small elisp script to setup and publish  it.
#+BEGIN_SRC emacs-lisp  :tangle ~/publish.el :results silent
(use-package htmlize)

(require 'ox-publish)

(let* ((base-directory "./")
       (org-export-with-broken-links t)
       (org-publish-project-alist `(("html"
				     :base-directory ,base-directory
				     :base-extension "org"
				     :publishing-directory ,(concat base-directory "docs")
				     :exclude "Almacen\\|USB\\|docs\\|Calendario\\|ucarima.*\\|.ipynb_checkpoints\\|00Notas.*\\|org-publisg.*\\|*.txt\\|kk.*"
				     :recursive t
				     :publishing-function org-html-publish-to-html
				     :auto-preamble t
				     :auto-sitemap nil)
				    
				    ("static-html"
				     :base-directory ,base-directory
				     :base-extension "css\\|js\\|png\\|jpg\\|gif\\|pdf\\|dat\\|mov\\|svg\\|aiff\\|csv\\|gdt\\|inp\\|ipynb\\|html"
				     :publishing-directory ,(concat base-directory "docs")
				     :exclude "Almacen\\|USB\\|docs\\|ucarima.*\\|.ipynb_checkpoints\\|org-publisg.*\\|*.txt\\|kk.*"
				     :recursive t
				     :publishing-function org-publish-attachment)

				    ;; ... all the components ...
				    ("scimax-eln" :components ("html" "static-html")))))

  (org-publish "scimax-eln" t))
#+END_SRC

# ~/CloudStation/ReposGH/Docencia/Econometria-SRC/
# ~/CloudStation/Nextcloud/Docencia/Ectr/
# ~/CloudStation/Nextcloud/Docencia/Ectr/

Podemos chequear la versi贸n local ejecutando el siguiente bloque

#+BEGIN_SRC emacs-lisp
(browse-url "docs/index.html")
#+END_SRC

#+RESULTS:

*** Commit and publish the html pages                              :noexport:

To publish these we go into the html directory, commit all the files and push them to GitHUB.


#+BEGIN_SRC sh 
#git add docs
git commit -m "update"
git push
#+END_SRC



*** con pdfs

#+BEGIN_SRC emacs-lisp
(require 'ox-publish)

(let* ((base-directory "~/repos/Ectr/")
       (org-export-with-broken-links t)
       (org-publish-project-alist `(("html"
				     :base-directory ,base-directory
				     :base-extension "org"
				     :publishing-directory ,(concat base-directory "docs")
				     :exclude "docs"
				     :recursive t
				     :publishing-function org-html-publish-to-html
				     :auto-preamble t
				     :auto-sitemap t)
				    ("pdf"
				     :base-directory ,base-directory
				     :base-extension "org"
				     :publishing-directory ,(concat base-directory "docs/pdfs")
				     :exclude "docs"
				     :recursive t

				     :publishing-function org-latex-publish-to-pdf
				     :auto-preamble t
				     :auto-sitemap nil)
				    
				    ("static-html"
				     :base-directory ,base-directory
				     :base-extension "css\\|js\\|png\\|jpg\\|gif\\|pdf\\|dat\\|mov\\|txt\\|svg\\|aiff\\|csv\\|gdt\\|inp\\|ipynb"
				     :publishing-directory ,(concat base-directory "docs")
				     :exclude "docs"
				     :recursive t
				     :publishing-function org-publish-attachment)

				    ;; ... all the components ...
				    ("scimax-eln" :components ("html" "static-html" "pdf")))))

  (org-publish "scimax-eln" t))
#+END_SRC

#+RESULTS:


* slides

[[https://nbconvert.readthedocs.io/en/latest/config_options.html][Configuraci贸n para nbconvert]] (las slides usan ficheros locales)

#+BEGIN_SRC python :tangle mycfg.py
c = get_config()
c.NbConvertApp.notebooks = ["Lecc01.ipynb",
                            "Lecc02.ipynb",
                            "Lecc03.ipynb",
                            "Lecc04.ipynb",
                            "Lecc05.ipynb"]
c.SlidesExporter.reveal_theme = 'solarized'
c.SlidesExporter.reveal_scroll = True
#+END_SRC

# :tangle custom.css
#+BEGIN_SRC css 
.slides {
  width: 90% !important;
}
#+END_SRC


#+BEGIN_SRC sh :results none
#jupyter nbconvert --config mycfg.py --to notebook
jupyter nbconvert --config mycfg.py --to slides 
#+END_SRC

# omite las celdas de c贸digo
#+BEGIN_SRC sh :results silent
#jupyter nbconvert --config mycfg.py --to notebook
jupyter nbconvert --config mycfg.py --to slides --no-input
#+END_SRC


# emacs --batch  --eval "(require 'org)(use-package ox-ipynb)" Lecc02.org --funcall ox-ipynb-export-org-file-to-ipynb-file

# emacsclient -e '(progn (switch-to-buffer "my-presentation.org") (org-beamer-export-to-pdf))'

# emacs --batch --load=plugin.el --load=my-funcs.el --eval=my-func file.v

# c.SlidesExporter.reveal_theme = 'beige'
# c.SlidesExporter.SlidesExporter.reveal_number = 'c/t'
# c.SlidesExporter.slideNumber = True
# c.SlidesExporter.reveal_width = 5500
# c.SlidesExporter.reveal_height = 800


* slides para GitHubpages


[[https://nbconvert.readthedocs.io/en/latest/config_options.html][Configuraci贸n para nbconvert]] (las slides usan ficheros de la web para poder funcionar en GitHubPages)

[[https://dbafromthecold.com/2021/02/21/creating-presentations-with-reveal-and-github-pages/][creating-presentations-with-reveal-and-github-pages]]

https://github.com/RichardAfolabi/Presentation_js

https://emasuriano.com/til/2024-07-01-create-presentations-from-notebook/

https://github.com/yjwen/org-reveal
https://github.com/hexmode/ox-reveal

#+BEGIN_SRC python :tangle mycfg-GitHubPages.py
c = get_config()
c.NbConvertApp.notebooks = ["Lecc01.ipynb",
                            "Lecc02.ipynb",
                            "Lecc03.ipynb",
                            "Lecc04.ipynb",
                            "Lecc05.ipynb"]

c.SlidesExporter.reveal_theme = 'solarized'
c.SlidesExporter.reveal_scroll = True
c.SlidesExporter.language_code = 'es'

c.SlidesExporter.mathjax_url = "https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML"

c.SlidesExporter.jquery_url = "https://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js"

c.SlidesExporter.require_js_url = "https://cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min.js"
#+END_SRC

#+BEGIN_SRC sh :results silent
jupyter nbconvert --config mycfg-GitHubPages.py --to slides --reveal-prefix reveal.js --no-input
#+END_SRC


#+BEGIN_SRC emacs-lisp
(require 'ox-ipynb)
(ox-ipynb-export-org-file-to-ipynb-file "Lecc01.org")
(ox-ipynb-export-org-file-to-ipynb-file "Lecc02.org")
;(ox-ipynb-export-org-file-to-ipynb-file "Lecc03.org")
;(ox-ipynb-export-org-file-to-ipynb-file "Lecc04.org")
;(ox-ipynb-export-org-file-to-ipynb-file "Lecc05.org")
#+END_SRC

#+RESULTS:
: Lecc01.ipynb


# jupyter nbconvert --config mycfg.py
# jupyter nbconvert --config mycfg.py  --to slides --reveal-prefix reveal.js
# jupyter nbconvert --config mycfg.py  --to slides --offline embed --reveal-prefix reveal.js
